<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>