<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>